<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<mvc:annotation-driven />
	<context:component-scan base-package="com.bridgelabz.note.*" />


	<bean id="daoImpl" class="com.bridgelabz.note.dao.UserDaoImpl"></bean>

	<bean id="userValidator" class="com.bridgelabz.note.validator.UserValidator"></bean>

	<bean id="emailService" class="com.bridgelabz.note.services.EmailService">
		<property name="mailSender" ref="mailSender"></property>
	</bean>


	<!-- mail sending bean -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="b130031cs@nitsikkim.ac.in" />
		<property name="password" value="bavita##gupta" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="queueCapacity" value="25" />
	</bean>

	<!-- JMS Implmentation start -->
	<bean id="jMSSendingMsg2Queue" class="com.bridgelabz.note.jms.JMSSendingMsg2Queue">
	</bean>

	<bean id="jMSReceivingMsgFromQueue" class="com.bridgelabz.note.jms.JMSReceivingMsgFromQueue"
		init-method="init" destroy-method="destroy">
	</bean>

	<bean id="jmsElasticProducer" class="com.bridgelabz.note.jms.JMSElasticProducer"
		init-method="init" destroy-method="destroy"></bean>

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
	</bean>
	<!-- JMS Implementation end -->


	<!-- Quartz Schedular implementation -->
	<!-- For times when you need more complex processing, passing data to the -->
	<!-- scheduled job -->
	<!-- <bean name="complexJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.bridgelabz.note.quartzSchedular.job.Job" />
		<property name="jobDataMap">
			<map>
				<entry key="task" value-ref="task" />
			</map>
		</property>
		<property name="durability" value="true" />
	</bean>
	
	Run the job every 5 seconds
	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="complexJobDetail" />
		<property name="cronExpression" value="0/5 * * * * ? " />
	</bean>
	
	run the trigger auto startup and glue the trigger with jobDetails
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="autoStartup" value="true" />
		<property name="jobDetails">
			<list>
				<ref bean="complexJobDetail" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean> -->


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>10000000</value>
		</property>
	</bean>


</beans>